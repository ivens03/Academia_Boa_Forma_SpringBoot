-- Aumentos campos da tabela alunos
-- Criação da tabela pagamentos alunos
-- Criação do tipo ENUM para os objetivos dos alunos

CREATE TYPE objeto_aluno_enum AS ENUM (
    'HIPERTROFIA',           -- Ganho de massa muscular
    'PERCA_DE_PESO',         -- Redução do percentual de gordura
    'RESISTENCIA',           -- Aumento da resistência muscular e/ou cardiovascular
    'CONDICIONAMENTO_FISICO',-- Manutenção ou melhoria da forma física geral
    'FLEXIBILIDADE',         -- Desenvolvimento da amplitude de movimento articular
    'REABILITACAO',          -- Recuperação após lesões ou problemas de saúde
    'MELHORA_DO_DESEMPENHO', -- Melhora no desempenho em esportes específicos
    'SAUDE_MENTAL'           -- Aliviar o estresse e melhorar o bem-estar
);

-- Criação da tabela "alunos"
CREATE TABLE alunos
(
    idAluno            SERIAL PRIMARY KEY, -- Identificador do aluno (auto-increment)
    nomeAluno          VARCHAR(255),       -- Nome do aluno
    idadeAluno         SMALLINT,           -- Idade do aluno (representado como Byte em Java)
    senhaAluno         VARCHAR(255),       -- Senha do aluno
    numeroCelularAluno VARCHAR(255),       -- Número de celular do aluno
    numeroEnergencia   VARCHAR(255),       -- Número de emergência
    doenca             BOOLEAN,            -- Indica se o aluno possui doença
    descricaoDoenca    VARCHAR(255),       -- Descrição da doença, se aplicável
    rua                VARCHAR(255),       -- Endereço: rua (campo embutido de Endereco)
    cidade             VARCHAR(255),       -- Endereço: cidade
    estado             VARCHAR(255),       -- Endereço: estado
    cep                VARCHAR(50),         -- Endereço: CEP
    objetivo
);

-- Criação da tabela "pagamentosAlunos"
CREATE TABLE pagamentosAlunos
(
    idPagamento  SERIAL PRIMARY KEY, -- Identificador do pagamento (auto-increment)
    idAluno      INTEGER,            -- Chave estrangeira para "alunos" baseada no idAluno
    nomeAluno    VARCHAR(255),       -- Chave estrangeira para "alunos" baseada no nomeAluno
    diaPagamento DATE,               -- Data agendada para o pagamento
    diaPago      DATE,               -- Data em que o pagamento foi efetuado
    CONSTRAINT fk_pagamento_idAluno FOREIGN KEY (idAluno) REFERENCES alunos (idAluno),
    CONSTRAINT fk_pagamento_nomeAluno FOREIGN KEY (nomeAluno) REFERENCES alunos (nomeAluno)
);
